/*BEGIN_LEGAL 
Copyright 2002-2020 Intel Corporation.

This software and the related documents are Intel copyrighted materials, and your
use of them is governed by the express license under which they were provided to
you ("License"). Unless the License provides otherwise, you may not use, modify,
copy, publish, distribute, disclose or transmit this software or the related
documents without Intel's prior written permission.

This software and the related documents are provided as is, with no express or
implied warranties, other than those that are expressly stated in the License.
END_LEGAL */
/// @file xed-flag-enum.h

// This file was automatically generated.
// Do not edit this file.

#if !defined(XED_FLAG_ENUM_H)
# define XED_FLAG_ENUM_H
#include "xed-common-hdrs.h"
#define XED_FLAG_INVALID_DEFINED 1
#define XED_FLAG_of_DEFINED 1
#define XED_FLAG_sf_DEFINED 1
#define XED_FLAG_zf_DEFINED 1
#define XED_FLAG_af_DEFINED 1
#define XED_FLAG_pf_DEFINED 1
#define XED_FLAG_cf_DEFINED 1
#define XED_FLAG_df_DEFINED 1
#define XED_FLAG_vif_DEFINED 1
#define XED_FLAG_iopl_DEFINED 1
#define XED_FLAG_if_DEFINED 1
#define XED_FLAG_ac_DEFINED 1
#define XED_FLAG_vm_DEFINED 1
#define XED_FLAG_rf_DEFINED 1
#define XED_FLAG_nt_DEFINED 1
#define XED_FLAG_tf_DEFINED 1
#define XED_FLAG_id_DEFINED 1
#define XED_FLAG_vip_DEFINED 1
#define XED_FLAG_fc0_DEFINED 1
#define XED_FLAG_fc1_DEFINED 1
#define XED_FLAG_fc2_DEFINED 1
#define XED_FLAG_fc3_DEFINED 1
#define XED_FLAG_LAST_DEFINED 1
typedef enum {
  XED_FLAG_INVALID,
  XED_FLAG_of, ///<< overflow flag
  XED_FLAG_sf, ///< sign flag
  XED_FLAG_zf, ///< zero flag
  XED_FLAG_af, ///< auxiliary flag
  XED_FLAG_pf, ///< parity flag
  XED_FLAG_cf, ///< carry flag
  XED_FLAG_df, ///< direction flag
  XED_FLAG_vif, ///< virtual interrupt flag
  XED_FLAG_iopl, ///< I/O privilege level
  XED_FLAG_if, ///< interrupt flag
  XED_FLAG_ac, ///< alignment check
  XED_FLAG_vm, ///< virtual-8086 mode
  XED_FLAG_rf, ///< resume flag
  XED_FLAG_nt, ///< nested task
  XED_FLAG_tf, ///< traf flag
  XED_FLAG_id, ///< ID flag
  XED_FLAG_vip, ///< virtual interrupt pending
  XED_FLAG_fc0, ///< x87 FC0 flag
  XED_FLAG_fc1, ///< x87 FC1 flag
  XED_FLAG_fc2, ///< x87 FC2 flag
  XED_FLAG_fc3, ///< x87 FC3 flag
  XED_FLAG_LAST
} xed_flag_enum_t;

/// This converts strings to #xed_flag_enum_t types.
/// @param s A C-string.
/// @return #xed_flag_enum_t
/// @ingroup ENUM
XED_DLL_EXPORT xed_flag_enum_t str2xed_flag_enum_t(const char* s);
/// This converts strings to #xed_flag_enum_t types.
/// @param p An enumeration element of type xed_flag_enum_t.
/// @return string
/// @ingroup ENUM
XED_DLL_EXPORT const char* xed_flag_enum_t2str(const xed_flag_enum_t p);

/// Returns the last element of the enumeration
/// @return xed_flag_enum_t The last element of the enumeration.
/// @ingroup ENUM
XED_DLL_EXPORT xed_flag_enum_t xed_flag_enum_t_last(void);
#endif
